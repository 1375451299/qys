<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.qys.dao.DocMapper">
  <resultMap id="BaseResultMap" type="com.example.qys.entity.Doc">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="size" jdbcType="DOUBLE" property="size" />
    <result column="initial_name" jdbcType="VARCHAR" property="initialName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    uuid, size, initial_name, create_time, address, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from file
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.qys.entity.Doc">
    insert into file (uuid, size, initial_name, 
      create_time, address, type
      )
    values (#{uuid,jdbcType=VARCHAR}, #{size,jdbcType=DOUBLE}, #{initialName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.qys.entity.Doc">
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="initialName != null">
        initial_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=DOUBLE},
      </if>
      <if test="initialName != null">
        #{initialName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.qys.entity.Doc">
    update file
    <set>
      <if test="size != null">
        size = #{size,jdbcType=DOUBLE},
      </if>
      <if test="initialName != null">
        initial_name = #{initialName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.qys.entity.Doc">
    update file
    set size = #{size,jdbcType=DOUBLE},
      initial_name = #{initialName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>